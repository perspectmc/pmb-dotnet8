name: SonarCloud
on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: windows-latest
    steps:
      # Step 1: Full checkout (required for .nuget folder structure)
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for SonarCloud

      # Step 2: Setup build tools
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Setup NuGet
        uses: nuget/setup-nuget@v2

      # Step 3: Cache NuGet packages
      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            ./src/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.config') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      # Step 4: Create .nuget folder structure
      - name: Setup NuGet targets
        shell: powershell
        run: |
          # Create .nuget directory
          New-Item -Path "./src/.nuget" -ItemType Directory -Force
          
          # Create minimal NuGet.targets file
          $targetsXml = '<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"></Project>'
          $targetsXml | Out-File -FilePath "./src/.nuget/NuGet.targets" -Encoding utf8
          
          # Download NuGet.exe
          Invoke-WebRequest -Uri "https://dist.nuget.org/win-x86-commandline/latest/nuget.exe" -OutFile "./src/.nuget/NuGet.exe"
          
          # Create NuGet.Config
          $configContent = @'
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <packageSources>
              <add key="nuget.org" value="https://api.nuget.org/v3/index.json" />
            </packageSources>
          </configuration>
          '@
          $configContent | Out-File -FilePath "./src/.nuget/NuGet.Config" -Encoding utf8

      # Step 5: Restore NuGet packages
      - name: Restore NuGet packages
        run: |
          nuget restore ./src/MedicalBillingSystem.sln -PackagesDirectory ./src/packages

      # Step 6: Setup Java for SonarScanner
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'

      # Step 7: Install SonarScanner for .NET
      - name: Install SonarScanner for .NET
        shell: powershell
        run: |
          New-Item -Path .sonar/scanner -ItemType Directory -Force
          dotnet tool update dotnet-sonarscanner --tool-path .sonar/scanner

      # Step 8: Build and analyze
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          Write-Host "Starting SonarScanner..." -ForegroundColor Green
          .sonar/scanner/dotnet-sonarscanner begin `
            /k:"perspectmc_pmb-dotnet8" `
            /o:"perspectmc" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml `
            /d:sonar.exclusions="**/obj/**,**/bin/**,**/packages/**,**/.DS_Store,**/jquery*.js,**/bootstrap*.js,**/modernizr*.js,**/jquery-ui*.js,**/jquery.*.js,**/vectors/**,**/.nuget/**" `
            /d:sonar.coverage.exclusions="**/Program.cs,**/AssemblyInfo.cs,**/Global.asax.cs,**/*Designer.cs,**/Reference.cs" `
            /d:sonar.verbose=true
          
          Write-Host "Building solution (9 projects)..." -ForegroundColor Green
          Write-Host "This may take 2-5 minutes..." -ForegroundColor Yellow
          
          # Build with MSBuild integration for SonarCloud
          msbuild ./src/MedicalBillingSystem.sln `
            /p:Configuration=Release `
            /p:Platform="Any CPU" `
            /p:RestorePackages=true `
            /verbosity:minimal `
            /consoleloggerparameters:Summary
          
          Write-Host "Build completed!" -ForegroundColor Green
          Write-Host "Uploading analysis to SonarCloud..." -ForegroundColor Green
          Write-Host "This may take 3-5 minutes..." -ForegroundColor Yellow
          
          .sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
          
          Write-Host "Analysis complete!" -ForegroundColor Green

      # Step 9: Upload build artifacts (optional)
      - name: Upload build artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            **/*.log
            **/msbuild.binlog
